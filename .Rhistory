print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
print(indices)
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
print("output1")
print(output1)
output2 <- list(arranged_list[[level]])
print("output2")
print(output2)
final <- output1
level <- 4
len_1 <- length(list_1)
print(paste("length 1: ", len_1))
list_1
list_1 <- output1
list_2 <- output2
list_1
len_1 <- length(list_1)
print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
print(indices)
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
print("output1")
print(output1)
output2 <- list(arranged_list[[level]])
print("output2")
print(output2)
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
for (level in 3:levels){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
print("output1")
print(output1)
output2 <- list(arranged_list[[level]])
print("output2")
print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
for (level in 3:levels){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
# print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
# print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
# print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
print(arranged_list)
for (level in 3:levels){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
# print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
# print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
final <- data.frame(final)
View(final)
for (level in 3:levels){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
len_1 <- length(list_1)
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
list_1
list_2
for (level in 3:levels){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
View(final)
final
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1: ", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1:", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1:", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1:", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, "-------", nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels+1){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
omega <- data.frame(final)
class(final)
omega <- data.frame(unlist(final))
View(omega)
final
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1:", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, "-------", nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels+1){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1:", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, "-------", nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels+1){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
final
class(final)
class(final[[1]])
omega <- do.call(rbind, lapply(final, data.frame))
View(omega)
do.call(rbind, lapply(final, data.frame))
final
omega <- bind_rows(lapply(final, as.data.frame))
View(omega)
bind_rows(lapply(final, as.data.frame))
final[[1]]
final[[2]]
omega <- cbind(final[[1]],
final[[2]],
final[[3]],
final[[4]],
final[[5]],
final[[6]],
final[[7]],
final[[8]])
list_1 <- list(arranged_list[[1]])
list_2 <- list(arranged_list[[2]])
len_1 <- length(list_1[[1]])
len_2 <- length(list_2[[1]])
level <- 3
for (level in 3:levels+1){
if (length(list_1) != 0 && length(list_2) != 0){
len_1 <- length(list_1)
print(paste("length 1:", len_1))
len_2 <- length(list_2[[1]])
print(paste("length 2:", len_2))
combination <- expand.grid(append(list_1, list_2))
print(paste("Total rows", level, "-------", nrow(combination)))
indices <- evaluation_new(combination, len_1, len_2)
# print(indices)
if (level == 3){
output1 <- append(list(unlist(list_1)[unlist(indices[1])]),
list(unlist(list_2)[unlist(indices[2])]))
}
else
{
output1 <- append(list_1,
list(unlist(list_2)[unlist(indices[2])]))
}
if (level == levels+1){
final <- output1
}
else{
# print("output1")
# print(output1)
output2 <- list(arranged_list[[level]])
# print("output2")
# print(output2)
list_1 <- output1
list_2 <- output2
final <- output1
}
}
}
omega <- cbind(final[[1]],
final[[2]],
final[[3]],
final[[4]],
final[[5]],
final[[6]],
final[[7]],
final[[8]])
omega <- cbind(final[[1]],
final[[2]],
final[[3]],
final[[4]],
final[[5]],
final[[6]],
final[[7]])
final
setwd("~/GitHub/Research-primer/Multiplexing App")
top <- 10
